# Configuration for telegraf agent
[agent]
  interval = "10s"
  round_interval = true
  metric_batch_size = 1000
  metric_buffer_limit = 20000
  collection_jitter = "0s"
  flush_interval = "10s"
  flush_jitter = "0s"
  precision = "0s"
  debug = false
  quiet = false
  ## Override default hostname, if empty use os.Hostname()
  hostname = ""
  ## If set to true, do no set the "host" tag in the telegraf agent.
  omit_hostname = false

[[outputs.influxdb_v2]]
  urls = ["${INFLUXDB_URL}"]
  token = "${INFLUXDB_TOKEN}"
  organization = "${INFLUXDB_ORGANIZATION}"
  bucket = "${INFLUXDB_BUCKET}"
  namepass = ["mapformer"]

# for debugging only
#[[outputs.file]]
#  files = [ "stdout" ]
#  flush_interval = "1s"
#  flush_jitter = "1s"
#  metric_batch_size = 10

[[inputs.mqtt_consumer]]
  ## Broker URLs for the MQTT server or cluster.  To connect to multiple
  ## clusters or standalone servers, use a seperate plugin instance.
  ##   example: servers = ["tcp://localhost:1883"]
  ##            servers = ["ssl://localhost:1883"]
  ##            servers = ["ws://localhost:1883"]
  servers = ["${MQTT_SERVER}"]

  ## If unset, a random client ID will be generated.
  client_id = "digi2-mqtt-telegraf"

  ## https://github.com/influxdata/telegraf/blob/master/docs/DATA_FORMATS_INPUT.md
  data_format = "value"
  data_type = "float"

  ## Topics that will be subscribed to.
  ## add more stuff under mapformer "shellies/mapformer/+/+/relay/+/???",
  topics = [
    "shellies/mapformer/+/+/sensor/temperature",
    "shellies/mapformer/+/+/sensor/humidity",
    #"shellies/mapformer/+/+/online", # online information not needed
  ]

  ## The message topic will be stored in a tag specified by this value.  If set
  ## to the empty string no topic tag will be created.
  topic_tag = "datapoint"

  name_override = "mapformer"

  ## QoS policy for messages
  ##   0 = at most once
  ##   1 = at least once
  ##   2 = exactly once
  ##
  ## When using a QoS of 1 or 2, you should enable persistent_session to allow
  ## resuming unacknowledged messages.
  qos = 0
  connection_timeout = "30s"

  ## Maximum messages to read from the broker that have not been written by an
  ## output.  For best throughput set based on the number of metrics within
  ## each message and the size of the output's metric_batch_size.
  ##
  ## For example, if each message from the queue contains 10 metrics and the
  ## output metric_batch_size is 1000, setting this to 100 will ensure that a
  ## full batch is collected and the write is triggered immediately without
  ## waiting until the next flush_interval.
  # max_undelivered_messages = 1000

  ## Persistent session disables clearing of the client session on connection.
  ## In order for this option to work you must also set client_id to identify
  ## the client.  To receive messages that arrived while the client is offline,
  ## also set the qos option to 1 or 2 and don't forget to also set the QoS when
  ## publishing.
  #persistent_session = true

  ## Username and password to connect MQTT server.
  username = "${MQTT_USERNAME}"
  password = "${MQTT_PASSWORD}"

  [[inputs.mqtt_consumer.topic_parsing]]
    topic = "shellies/mapformer/+/+/sensor/+"
    tags = "_/_/_/location/_/_"


[[inputs.mqtt_consumer]]
  servers = ["${MQTT_SERVER}"]
  ## If unset, a random client ID will be generated.
  client_id = "digi2-mqtt-telegraf-json"

  ## https://github.com/influxdata/telegraf/blob/master/docs/DATA_FORMATS_INPUT.md
  data_format = "json_v2"
  data_type = "float"

  ## Topics that will be subscribed to.
  topics = [
    "shellies/mapformer/+/+/status/temperature:0",
    "shellies/mapformer/+/+/status/humidity:0",
    "shellies/mapformer/+/+/status/em1:0",
    "shellies/mapformer/+/+/status/em1:1",
    "shellies/mapformer/+/+/status/em:0",
  ]

  topic_tag = "datapoint"
  name_override = "mapformer"

  qos = 0
  connection_timeout = "30s"
#  persistent_session = true # DO NOT USE, MQTT CLIENT WILL BEHAVE BADLY
  username = "${MQTT_USERNAME}"
  password = "${MQTT_PASSWORD}"

  [[inputs.mqtt_consumer.topic_parsing]]
    topic = "shellies/mapformer/+/+/status/+"
    tags = "_/_/_/location/_/json"

  [[inputs.mqtt_consumer.json_v2]]
#      [[inputs.mqtt_consumer.json_v2.tag]] # not needed
      [[inputs.mqtt_consumer.json_v2.field]] # fields by key and type
	path = "act_power"
        type = "float"
	optional = true
      [[inputs.mqtt_consumer.json_v2.field]] # fields by key and type
        path = "rh"
        type = "float"
	optional = true
      [[inputs.mqtt_consumer.json_v2.field]] # fields by key and type
	path = "tC"
        type = "float"
	optional = true
      [[inputs.mqtt_consumer.json_v2.field]] # fields by key and type
        path = "total_act_power"
        type = "float"
	optional = true
      [[inputs.mqtt_consumer.json_v2.field]] # fields by key and type
        path = "a_act_power"
        type = "float"
	optional = true
      [[inputs.mqtt_consumer.json_v2.field]] # fields by key and type
        path = "b_act_power"
        type = "float"
	optional = true
      [[inputs.mqtt_consumer.json_v2.field]] # fields by key and type
        path = "c_act_power"
        type = "float"
	optional = true
